<% include ./partials/header.ejs %>

<div class = "container-fluid">
    <div class = "row">
        <div class = "col-3" id = "optionContainer"> 

            <div class = "container-fluid">
                <div class = "row justify-content-around">
                    <div class ="col-12 border mainfeature">
                        <div class = "container-fluid position-absolute" style = "left : 0px; z-index : 1">
                            <div class = "row justify-content-end">
                                <div class = "col-2 mt-3">
                                    <button class="btn btn-dark" type="button" data-toggle="collapse" data-target="#filterform" aria-expanded="false" aria-controls="filterform">
                                        <i class="fa fa-cog"></i>
                                    </button>
                                </div>
                            </div>
                            <div class="collapse container-fluid" id="filterform">
                                <div id = "filteroptions">
                                        <h4 class = "text-center"> filters </h4>
                                        <br>
                                        <p> 
                                            <input type="checkbox" name="filterByPosition" class = "filterdata" checked = "true"> show the first
                                            <input type="number" name="position" class = "filterdata" value= "500">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByNonMember" class = "filterdata"> f2p only
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByTrend" class = "filterdata"> price trend
                                            <select name = "trendType" class = "filterdata">
                                                <option value="none">none</option>
                                                <option value="filterByPositiveTrend">positive</option>
                                                <option value="filterByNegativeTrend">negative</option>
                                                <option value="filterByNeutralTrend">neutral</option>
                                            </select>
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByTrendDuration" class = "filterdata"> minimum price trend duration
                                            <input type="number" name="trendDuration" class = "filterdata">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByPriceLowerBound" class = "filterdata"> minimum price
                                            <input type="number" name="priceLowerBound" class = "filterdata">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByPriceUpperBound" class = "filterdata"> maximum price
                                            <input type="number" name="priceUpperBound" class = "filterdata">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByVolumeLowerBound" class = "filterdata"> minimum volume
                                            <input type="number" name="volumeLowerBound" class = "filterdata">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByVolumeUpperBound" class = "filterdata"> maximum volume
                                            <input type="number" name="volumeUpperBound" class = "filterdata">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByItemLimitUpperBound" class = "filterdata"> maximum item limit
                                            <input type="number" name="itemLimitUpperBound" class = "filterdata">
                                        </p>
                                        <p> 
                                            <input type="checkbox" name="filterByItemLimitLowerBound" class = "filterdata"> minimum item limit
                                            <input type="number" name="itemLimitLowerBound" class = "filterdata">
                                        </p>
                                </div>
                            </div>
                        </div>
                        <div class ="container-fluid" id = "sortfeature">
                            <div class = "container-fluid">
                                <div class = "row justify-content-center">
                                    <i class="fa fa-line-chart fa-3x"></i>
                                </div>
                            </div>
                            <form id = "sortform" action = "/item/sort" method = "GET">
                                <h3 class = "text-center"> sort </h3>
                                <p> 
                                    <input type="radio" name = "typeSort" value="roundedSort"> rounded values
                                    <button type="button" class="btn btn-secondary" data-container="body" data-toggle="tooltip" data-placement="right" title="values are rounded down before comparison e.g. 123 -> 100, 4321 -> 1000">
                                        <i class="fa fa-info-circle"></i>
                                    </button>
                                </p>
                                <p> 
                                    <input type="radio" name = "typeSort" value="weightedSort"> weighted values
                                    <button type="button" class="btn btn-secondary" data-container="body" data-toggle="tooltip" data-placement="right" title="weighted values (adjusted by you) are compared instead of the raw value, must select a value to sort by before toggling">
                                        <i class="fa fa-info-circle"></i>
                                    </button>
                                </p>
                                <div class = "sortoptions">
                                    <select class = "sortby" id = "firstselect" name = "sortby[0]">
                                        <option value="sortByNone">none</option>
                                        <option value="sortByPrice">by current price</option>
                                        <option value="sortByVolume">by current volume</option>
                                    </select>
                                    <button type = "button" id = "addoption"> <i class="fa fa-plus"></i></button>
                                    <button type="button" class="btn btn-secondary" data-container="body" data-toggle="tooltip" data-placement="right" title="select a value to sort by">
                                        <i class="fa fa-info-circle"></i>
                                    </button>
                                    <div class="progress position-relative d-none">
                                        <div class="progress-bar" role="progressbar" style="width: 1%; color:black">1x</div>
                                        <input name = "weight[0]" min = 0 max = 100000 value = 1 class = "position-absolute weightrange" type = "range">
                                    </div>
                                </div>
                                <div class = "d-flex justify-content-center mt-2">
                                    <button id = "sortsubmit" class = "btn btn-light">sort</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class = "col-6" id = "mainContainer">

            <h5 class = "border-bottom">
                Sorted Results <span id = "itemnumrange"></span>
            </h5>   
            <table class="table table-bordered table-striped table-sm">
                <tr>
                    <th></th>
                    <!-- <th>ID</th> 
                    <th>ITEM LIMIT</th>  -->
                    <th>Current Price</th>
                    <th>Current Volume</th>
                    <th>Current Price Trend</th>
                    <!-- <th>CURRENT TREND DURATION</th>
                    <th>MEMBERS ONLY</th> -->
                    <% if (progressbars) { %>
                        <th>Item Score</th>
                    <% } %>
                </tr>
                <% for(var i=0; i < items.length; i++) { %>
                    <tr class = "item d-none">
                        <td> 
                            <% if (user) { %>
                                <button class = "additem btn btn-outline-dark" 
                                data-item-name = "<%= items[i].name %>" 
                                data-item-name-lower = "<%= items[i].name_lower %>" 
                                data-item-price = "<%= items[i].statdata.currentPrice.price %>"
                                data-item-updated = "<%= items[i].lastUpdated.valueOf() %>"
                                data-item-id = "<%= items[i].id %>">
                                    <i class = "fa fa-plus"> </i> 
                                </button>
                            <% } %>
                            <img src = "/images/small/<%=items[i].id%>.gif">
                            <a href = "/item/data/<%= items[i].name_lower %>"><%= items[i].name %> </a> 
                         </td>
                        <!-- <td> <%= items[i].id %> </td>
                        <td> <%= items[i].limit %> </td> -->
                        <td> <%= items[i].statdata.currentPrice.price.toLocaleString() %> </td>
                        <td> <%= items[i].statdata.currentVolume.volume.toLocaleString() %> </td>
                        <td> <%= items[i].statdata.currentTrend%> </td>
                        <!-- <td> <%= items[i].statdata.currentTrendDuration%> </td>
                        <td> <%= items[i].members %> </td> -->
                        <% if (progressbars) { %>
                            <td>
                                 <div class="progress">
                                <%  for (var q = 0; q < progressbars.length; q ++) { %>
                                  <div class="progress-bar" role="progressbar" 
                                  style="width:<%=progressbars[q].percentages[i]%>%; background-color:<%=progressbars[q].color%>">
                                    <%=Math.floor(progressbars[q].scores[i] * 1000) / 1000%>
                                  </div>
                                <% } %>
                                </div>
                            </td>
                        <% } %>
                    </tr>
                <% } %>
                <!-- <% for(i; i < Math.ceil((items.length) / 10) * 10; i++) {%>
                    <tr class = "item d-none"> nothing here </tr>
                <% }%> -->
            </table>
            <% if (items.length > 0) { %>
                <div class = "d-flex justify-content-center">
                    <div>
                        <button class = "btn btn-outline-primary mr-5" id = "first"> 1 </button>
                        <button class = "btn btn-outline-primary" id = "prevRow"> << </button>
                        <button class = "btn btn-outline-primary" id = "prev"> < </button>
                        <% for(var i = 1; i <= Math.ceil((items.length) / 10); i++) { %>
                        <a class = "btn btn-outline-primary d-none" href = "#<%=i%>"><%=i%> </a>
                        <% } %>
                        <button class = "btn btn-outline-primary" id = "next"> > </button>
                        <button class = "btn btn-outline-primary" id = "nextRow"> >> </button>
                        <button class = "btn btn-outline-primary ml-5" id = "last"> <%=Math.ceil((items.length) / 10)%> </button>
                    </div>
                </div>
            <% } %>
      
        </div>
        <div class = "col-3" id = "investmentContainer">
            <% include ./partials/profits.ejs %>
            <% include ./partials/losses.ejs %>
        </div>
    </div>
</div>


<script>
//for adding investments
    $(".additem").click(function()
    {
        var itemName = $(this).data().itemName;
        var itemNameLower = $(this).data().itemNameLower;
        var itemPrice = $(this).data().itemPrice;
        var lastUpdated = $(this).data().itemUpdated;
        var itemId = $(this).data().itemId;
        
        var form = $(
                    "<div class = 'container itemtab'>" +
                        "<form method = 'POST' action = '/item/add/" + itemId + "/" + window.location.href.split("/").join("_").split("?").join("-") + "'>" +
                            "<h1>" + itemName + " (" + itemPrice + "gp each)</h1>" +
                            "<h3> quantity </h3>" +
                            "<input name = 'quantity' type = 'number' min = 1 required>" +
                            "<h3> price per item</h3>" +
                            "<input name = 'pricePerItem' type = 'number' value = '" + itemPrice + "' min = 1 required>" +
                            "<h3> Total Price </h3>" +
                            "<span id = 'totalPrice'> 0 gp </span>" +
                            "<input class = 'd-block' type = 'submit'>" +
                            "<input class = 'd-none' name = 'lastUpdated' value = '" + lastUpdated + "''>" +
                            "<input class = 'd-none' name = 'itemPrice' value = '" + itemPrice + "''>" +
                        "</form>" +
                    "</div>"
                    ).appendTo($("body"));

        $(".itemtab input").on("input", function()
        {
            let ppi = parseInt($("input[name='pricePerItem']")[0].value);
            let qty = parseInt($("input[name='quantity']")[0].value);
            if (ppi > 0 && qty > 0)
            {
                $("#totalPrice").text((ppi * qty) + " gp");
            }
        });

        form.focusout(function (event)
        {
            var form = $(this);
            setTimeout(function () {
                if (form.find(':focus').length === 0)
                {
                    form.remove();
                }
            }); 
        });

        $("input[name='quantity']").focus();
    });

</script>



<script>
    //for pagination
    function checkHash (hash) //true if hash not a viable number
    {
        if (hash.length === 0 || hash.length === 1 || isNaN(parseInt(hash.substring(1, hash.length))) )
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    function toggleItems (hash, numItemsShowed)
    {
        for (var i = (hash - 1) * numItemsShowed; i < hash * numItemsShowed; i ++)
        {
            $(".item:eq(" + i + ")").toggleClass("d-none");
        }
    }
    //toggles row of pagination buttons based on hash
    function togglePagination(hash)
    {
        var currentRow = Math.floor(hash / 5) + ((hash % 5) > 0 ? 1 : 0);
        for (var i = (currentRow * 5) - 4; i < (currentRow * 5) + 1; i ++)
        {
            $("a[href=\"#"+ (i) +"\"]").toggleClass("d-none");
        }
    }

    function updateItemNumRange(hash)
    {
        let itemnumrange = (numItems === 0) ? "" : ( "(" + (((hash - 1) * 10) + 1) + "-" + (((hash * 10) > numItems) ? numItems : hash * 10) + ")" );
        $("#itemnumrange").html(itemnumrange);
    }

    var numItemsShowed = 10;
    var numItems = $(".item").length;
    var numPages = Math.ceil($(".item").length / numItemsShowed);

    //sanitize hash
    var hash = checkHash(window.location.hash) ? 1 : parseInt(window.location.hash.substring(1, window.location.hash.length));
        hash = hash <= 0 || hash > numPages ? 1 : hash; 
    toggleItems(hash, numItemsShowed);
    togglePagination(hash);

    window.onhashchange = function ()
    {
        toggleItems(hash, numItemsShowed);
        togglePagination(hash);
        hash =  checkHash(window.location.hash) ? 1 : parseInt(window.location.hash.substring(1, window.location.hash.length));
        hash = hash <= 0 || hash > numPages ? 1 : hash; 
        toggleItems(hash, numItemsShowed);
        togglePagination(hash);
        $("a[href=\"#"+ (hash) +"\"]").focus();
        updateItemNumRange(hash);
    }

    updateItemNumRange(hash); 


    $("#next").click(function ()
    {
        if (hash < numPages)
        {
            window.location.hash = hash + 1;  
        }
    });

    $("#prev").click(function ()
    {
        if (hash > 1)
        {
          window.location.hash = hash - 1;  
        }
    });

    $("#nextRow").click(function ()
    {
        var currentRow = Math.floor(hash / 5) + ((hash % 5) > 0 ? 1 : 0);
        if (currentRow  < Math.ceil(numPages / 5))
        {
            window.location.hash = (currentRow * 5) + 1;
        }

    });

    $("#prevRow").click(function ()
    {
        var currentRow = Math.floor(hash / 5) + ((hash % 5) > 0 ? 1 : 0);
        if (currentRow  > 1)
        {
            window.location.hash = ((currentRow - 1)  * 5) - 4;
        }
       
    });

    $("#first").click(function ()
    {
         window.location.hash = 1;
       
    });

    $("#last").click(function ()
    {
        window.location.hash = numPages;
       
    }); 
</script>




<script>
    $("#sortform").on("input", ".sortoptions input[type='range']", function(event)
    {
        $(this).siblings(".progress-bar").css("width", (event.target.value / 1000) + "%");
        $(this).siblings(".progress-bar").html((event.target.value) + "x");
    });
</script>


<script>
        //for sortform
    var sortform = $("#sortform");
    var sortsubmit = $("#sortsubmit");

    //for progressbar colors
    var colors = 
    {
        sortByPrice : "#ebe34b",
        sortByVolume : "#81adb5"
    }
    var options = 
    {
        //bn : {selected : false, string : "<option value=\"bn\">none</option>"},
        sortByPrice : {selected : false, string : "<option value=\"sortByPrice\">by current price</option>"},
        sortByVolume : {selected : false, string : "<option value=\"sortByVolume\">by current volume</option>"}
    }
    var optionIndex = 1; //number of options that have been selected, also serves as unique index for naming the new option for select element
    var optionString = "";
    var checked = {roundedSort : false, weightedSort : false};

    sortform.on("submit", function ()
    {
        $("#sortform select").removeAttr('disabled');
    });

    $("#addoption").click(function () {
        //only add options if first select isnt selected as none and last select doesnt only have one option
        if ( ($(".sortby").first().prop("value") !== 'sortByNone') && ($(".sortby").last().children("option").length !== 1) )
        {
            $(".sortby").last().prop("disabled", true);
            options[$(".sortby").last().prop("value")].selected = true;
            optionString = "";

            for (var option in options)
            {
                if (!options[option].selected)
                {
                    optionString += options[option].string;
                }
            }

            $(".sortoptions").last().after(
                "<div class = \"sortoptions\">" +
                    "<h6> then by </h6>" +
                    "<select class = \"sortby\"name = \"sortby[" + optionIndex + "]\">" +
                        optionString +
                    "</select>" +
                    "<div class=\"progress position-relative " + (checked[$("input[value='weightedSort']").prop("value")] ? "" : "d-none") + "\">" +
                        "<div class=\"progress-bar\"role=\"progressbar\" style=\"width: 1%; color:black\">1x</div>" +
                        "<input name = \"weight[" + optionIndex + "]\" class = \"position-absolute weightrange\" type = \"range\" min=\"1\" max=\"100000\" value = \"1\" >"+
                    "</div>" +  
                "</div"
                );
            $(".progress").last().children(".progress-bar").css("background-color", colors[$(".progress").last().siblings().children("option:selected").val()]);
            optionIndex ++;


        }
    });


    $("input[type='radio']").click(function()
    {
        //if user tries toggling weighted when sorting by none, dont let em
        if ($(this).prop("value") === "weightedSort" && $("#firstselect option:selected").val() === "sortByNone")
        {
            $(this).prop("checked", false);
            checked[$(this).prop("value")] = false;
        }
        else
        {
            //if already checked, uncheck it
            if (checked[$(this).prop("value")])
            {
                $(this).prop("checked", false);
                checked[$(this).prop("value")] = false;
                //if weightedsort, toggle progressbars
                if ($(this).prop("value") === "weightedSort")
                {
                    $(".progress").toggleClass("d-none");
                }
                else // hide bars
                {
                    $(".progress").addClass("d-none");
                }
            }
            //otherwise, check it and uncheck everything else
            else
            {
                for (sorttype in checked)
                {
                    checked[sorttype] = false;
                }
                checked[$(this).prop("value")] = true;
                //if weightedsort, toggle progressbars
                if ($(this).prop("value") === "weightedSort")
                {
                    $(".progress").toggleClass("d-none");
                }
                else // hide bars
                {
                    $(".progress").addClass("d-none");
                }
            }
        }
    });

    //uncheck weightedsort and hide bar if user goes back to sortbynone
    $("select").on("input", function()
    {
        if ($("#firstselect option:selected").val() === "sortByNone")
        {
            $("input[value='weightedSort']").prop("checked", false);
            checked["weightedSort"] = false;
            $(".progress").addClass("d-none");
        }
        //set the correct color for the progress bar
        else
        {
            $(".progress").last().children(".progress-bar").css("background-color", colors[$(this).children("option:selected").val()]);
        }
    });

    sortsubmit.click(function ()
    {
        let checkboxes = $(".filterdata[type='checkbox']");
        for (let i = 0; i < checkboxes.length; i++)
        {
            let checkbox = checkboxes[i];
            if (!checkbox.checked)
            {
                $(checkbox).attr("disabled", true);
                $(checkbox).siblings().attr("disabled", true);
            }
        };
        sortform.append($(".filterdata").toggleClass("d-none"));
    });


</script>


<script>
    // for sliding animations

    var filteroptions = $("#filteroptions");
    var buttonstate = false;
    var buttonactive = false;
    //make a new array just to make use of the foreach function lol
    var arr = new Array();
    for (var i = 0; i < 100; i ++)
    {
        arr.push(i);
    }

    $("#slidebutton").click(function()
    {
        buttonstate = !buttonstate;
        buttonactive = true;
        arr.forEach(function(value, index)
        {
            setTimeout(function()
            {
                filteroptions.css("width", value * 4);
            }, index * 5);
        });
        arr = arr.reverse();
    });
</script>

<% include ./partials/footer.ejs %>