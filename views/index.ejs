<% include ./partials/header.ejs %>

<div id = "iconcontainer">
	<div class = "container">
		<div class = "row">
			<div class = "col-4">
				<div class = "container iconfeature">
					<div class = "row justify-content-center">
						<i class="fa fa-search fa-3x"></i>
					</div>
				</div>
			</div>
			<div class = "col-4">
				<div class = "container iconfeature">
					<div class = "row justify-content-center">
						<i class="fa fa-line-chart fa-3x"></i>
					</div>
				</div>
			</div>
			<div class = "col-4">
				<div class = "container iconfeature">
					<div class = "row justify-content-center">
						<i class="fa fa-trophy fa-3x"></i>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div id = "featurecontainer">
	<div class = "container position-absolute mainfeature" id = "searchfeature" hidden = "true">
		<div id = "searchform">
			<h3 class = "text-center"> search </h3>
			<form action = "./item/search" method = "POST">
				<div class = "d-flex justify-content-center">
								<input class = "text-center" id = "searchbox" type = "text" name = "searchQuery" placeholder= "enter item name" minlength="3"required><button  type="submit">
						<i class="fa fa-search"></i>
					</button>
				</div>
			</form>
		</div>
	</div>
	<div class ="container position-absolute mainfeature" id = "sortfeature" hidden = "true">
		<div class = "position-relative">
			<form class = "pl-5" id = "sortform" action = "./item/sort" method = "GET">
				<h3 class = "text-center"> sort </h3>
				<p> 
					<input type="radio" name = "typeSort" value="roundedSort"> rounded sort
				</p>
				<p> 
					<input type="radio" name = "typeSort" value="weightedSort"> weighted sort
				</p>
				<button type = "button" id = "addoption"> <i class="fa fa-plus"></i></button>
				<div class = "sortoptions">
					<select class = "sortby" id = "firstselect" name = "sortby[0]">
						<option value="sortByNone">none</option>
						<option value="sortByPrice">by current price</option>
						<option value="sortByVolume">by current volume</option>
					</select>
					<div class="progress position-relative d-none">
						<div class="progress-bar" role="progressbar"></div>
						<input name = "weight[0]" class = "position-absolute weightrange" type = "range">
					</div>
				</div>
				<div class = "d-flex justify-content-center">
					<button id = "sortsubmit" class = "btn btn-light">sort</button>
				</div>
			</form>
			<div id = "filterform" class = "position-absolute">
				<div id = "filteroptions" class = "d-inline-block">
					<div>
						<h4 class = "text-center"> filters </h4>
						<br>
						<p> 
							<input type="checkbox" name="filterByPosition" class = "filterdata" checked = "true"> show the first
							<input type="number" name="position" class = "filterdata" value= "500">
						</p>
						<p> 
							<input type="checkbox" name="filterByNonMember" class = "filterdata"> f2p only
						</p>
						<p> 
							<input type="checkbox" name="filterByTrend" class = "filterdata"> trend
							<select name = "trendType" class = "filterdata">
								<option value="none">none</option>
								<option value="filterByPositiveTrend">positive</option>
								<option value="filterByNegativeTrend">negative</option>
								<option value="filterByNeutralTrend">neutral</option>
							</select>
						</p>
						<p> 
							<input type="checkbox" name="filterByPriceLowerBound" class = "filterdata"> minimum price
							<input type="number" name="priceLowerBound" class = "filterdata">
						</p>
						<p> 
							<input type="checkbox" name="filterByPriceUpperBound" class = "filterdata"> maximum price
							<input type="number" name="priceUpperBound" class = "filterdata">
						</p>
						<p> 
							<input type="checkbox" name="filterByVolumeLowerBound" class = "filterdata"> minimum volume
							<input type="number" name="volumeLowerBound" class = "filterdata">
						</p>
						<p> 
							<input type="checkbox" name="filterByVolumeUpperBound" class = "filterdata"> maximum volume
							<input type="number" name="volumeUpperBound" class = "filterdata">
						</p>
						<p> 
							<input type="checkbox" name="filterByItemLimitUpperBound" class = "filterdata"> maximum item limit
							<input type="number" name="itemLimitUpperBound" class = "filterdata">
						</p>
						<p> 
							<input type="checkbox" name="filterByItemLimitLowerBound" class = "filterdata"> minimum item limit
							<input type="number" name="itemLimitLowerBound" class = "filterdata">
						</p>
					</div>
				</div>
				<div id = "filterslideout" class = "d-inline-flex align-items-center">
					<div id = "slidebutton" class = "d-flex align-items-center"> 
						<div>></div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	$("#sortform").on("input", ".sortoptions input[type='range']", function(event)
	{
		$(this).siblings(".progress-bar").css("width", event.target.value + "%");
	});
</script>


<script>
	//for sortform
var sortform = $("#sortform");
var sortsubmit = $("#sortsubmit");

//for progressbar colors
var colors = 
{
	sortByPrice : "#ebe34b",
	sortByVolume : "#81adb5"
}
var options = 
{
	//bn : {selected : false, string : "<option value=\"bn\">none</option>"},
	sortByPrice : {selected : false, string : "<option value=\"sortByPrice\">by current price</option>"},
	sortByVolume : {selected : false, string : "<option value=\"sortByVolume\">by current volume</option>"}
}
var optionIndex = 1; //number of options that have been selected, also serves as unique index for naming the new option for select element
var optionString = "";
var checked = {roundedSort : false, weightedSort : false};

sortform.on("submit", function ()
{
	$("#sortform select").removeAttr('disabled');
});

$("#addoption").click(function () {
	//only add options if first select isnt selected as none and last select doesnt only have one option
	if ( ($(".sortby").first().prop("value") !== 'sortByNone') && ($(".sortby").last().children("option").length !== 1) )
	{
		$(".sortby").last().prop("disabled", true);
		options[$(".sortby").last().prop("value")].selected = true;
		optionString = "";

		for (var option in options)
		{
			if (!options[option].selected)
			{
				optionString += options[option].string;
			}
		}

		$(".sortoptions").last().after(
			"<div class = \"sortoptions\">" +
				"<h6> then by </h6>" +
				"<select class = \"sortby\"name = \"sortby[" + optionIndex + "]\">" +
					optionString +
				"</select>" +
				"<div class=\"progress position-relative " + (checked[$("input[value='weightedSort']").prop("value")] ? "" : "d-none") + "\">" +
					"<div id = \"test\" class=\"progress-bar\"role=\"progressbar\"></div>" +
					"<input name = \"weight[" + optionIndex + "]\" class = \"position-absolute weightrange\" type = \"range\"> "+
				"</div>" +	
			"</div"
			);
		$(".progress").last().children(".progress-bar").css("background-color", colors[$(".progress").last().siblings().children("option:selected").val()]);
		optionIndex ++;


	}
});


$("input[type='radio']").click(function()
{
	//if user tries toggling weighted when sorting by none, dont let em
	if ($(this).prop("value") === "weightedSort" && $("#firstselect option:selected").val() === "sortByNone")
	{
		$(this).prop("checked", false);
		checked[$(this).prop("value")] = false;
	}
	else
	{
		//if already checked, uncheck it
		if (checked[$(this).prop("value")])
		{
			$(this).prop("checked", false);
			checked[$(this).prop("value")] = false;
			//if weightedsort, toggle progressbars
			if ($(this).prop("value") === "weightedSort")
			{
				$(".progress").toggleClass("d-none");
			}
			else // hide bars
			{
				$(".progress").addClass("d-none");
			}
		}
		//otherwise, check it and uncheck everything else
		else
		{
			for (sorttype in checked)
			{
				checked[sorttype] = false;
			}
			checked[$(this).prop("value")] = true;
			//if weightedsort, toggle progressbars
			if ($(this).prop("value") === "weightedSort")
			{
				$(".progress").toggleClass("d-none");
			}
			else // hide bars
			{
				$(".progress").addClass("d-none");
			}
		}
	}
});

//uncheck weightedsort and hide bar if user goes back to sortbynone
$("select").on("input", function()
{
	if ($("#firstselect option:selected").val() === "sortByNone")
	{
		$("input[value='weightedSort']").prop("checked", false);
		checked["weightedSort"] = false;
		$(".progress").addClass("d-none");
	}
	//set the correct color for the progress bar
	else
	{
		$(".progress").last().children(".progress-bar").css("background-color", colors[$(this).children("option:selected").val()]);
	}
});

sortsubmit.click(function ()
{
	let checkboxes = $(".filterdata[type='checkbox']");
	for (let i = 0; i < checkboxes.length; i++)
	{
		let checkbox = checkboxes[i];
		if (!checkbox.checked)
		{
			$(checkbox).attr("disabled", true);
			$(checkbox).siblings().attr("disabled", true);
		}
	};
	sortform.append($(".filterdata").toggleClass("d-none"));
});


</script>


<script>
	// for sliding animations

	var filteroptions = $("#filteroptions");
	var buttonstate = false;
	var buttonactive = false;
	//make a new array just to make use of the foreach function lol
	var arr = new Array();
	for (var i = 0; i < 100; i ++)
	{
		arr.push(i);
	}

	$("#slidebutton").click(function()
	{
		buttonstate = !buttonstate;
		buttonactive = true;
		arr.forEach(function(value, index)
		{
			setTimeout(function()
			{
				filteroptions.css("width", value * 4);
			}, index * 5);
		});
		arr = arr.reverse();
	});
</script>

<script>

	$(".iconfeature").click(function()
	{
		$(".iconfeature").removeClass("shadow-bottom");
		$(this).addClass("shadow-bottom");
	});

	$(".fa-search").parent().parent().click(function()
	{
		$(".mainfeature").attr("hidden", true)
		$("#searchfeature").attr("hidden", false);
	});

	$(".fa-line-chart").parent().parent().click(function()
	{
		$(".mainfeature").attr("hidden", true)
		$("#sortfeature").attr("hidden", false);
	});

	$(".fa-trophy").parent().parent().click(function()
	{
		$(".mainfeature").attr("hidden", true)
	});



</script>

<% include ./partials/footer.ejs %>