<% include ./partials/header.ejs %>

<div class = "container" id = "maincontainer">
	<div class = "row justify-content-around">
		<div class = "col-md-5 col-sm-12 mt-5">
			<div class = "flip-card">
				<div class ="flip-card-inner">
					<div class = "flip-card-front">
						<img class = "featureimage" src = "https://img.icons8.com/cotton/64/000000/detective.png">
					</div>
					<div class = "flip-card-back">
						<div class = "mainfeature">
							<div id = "searchform">
								<h3 class = "text-center"> search </h3>
								<form action = "./item/search" method = "POST">
									<div class = "d-flex justify-content-center">
										<input id = "searchbox" type = "text" name = "searchQuery" placeholder= "enter item name" minlength= "3" required><button  type="submit">
											<i class="fa fa-search"></i>
										</button>
									</div>
								</form>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<div class = "col-md-5 col-sm-12 mt-5">
			<div class = "flip-card">
				<div class ="flip-card-inner">
					<div class = "flip-card-front">
						<img class = "featureimage" src = "https://img.icons8.com/wired/64/000000/statistics.png">
					</div>
					<div class = "flip-card-back">
						<div class = "mainfeature position-relative">
							<form class = "pl-5" id = "sortform" action = "./item/sort" method = "GET">
								<h3 class = "text-center"> sort by </h3>
								<p> 
									<input type="radio" name = "typeSort" value="roundedSort"> rounded sort
								</p>
								<p> 
									<input type="radio" name = "typeSort" value="weightedSort"> weighted sort
								</p>
								<button type = "button" id = "addoption"> <i class="fa fa-plus"></i></button>
								<div class = "sortoptions">
									<select class = "sortby" id = "firstselect" name = "sortby[0]">
										<option value="sortByNone">none</option>
										<option value="sortByPrice">by current price</option>
										<option value="sortByVolume">by current volume</option>
									</select>
									<div class="progress position-relative d-none">
										<div class="progress-bar" role="progressbar"></div>
										<input name = "weight[0]" class = "position-absolute weightrange" type = "range">
									</div>
								</div>
								<div class = "d-flex justify-content-center">
									<button id = "sortsubmit" class = "btn btn-light">sort</button>
								</div>
							</form>
							<div id = "filterform" class = "position-absolute">
								<div id = "filteroptions" class = "d-inline-block">
									<div>
										<h4 class = "text-center"> filters </h4>
										<br>
										<p> 
											<input type="checkbox" name="filterByPosition" class = "filterdata"> show the first
											<input type="number" name="position" class = "filterdata">
										</p>
										<p> 
											<input type="checkbox" name="filterByNonMember" class = "filterdata"> f2p only
										</p>
										<p> 
											<input type="checkbox" name="filterByTrend" class = "filterdata"> trend
											<select name = "trendType" class = "filterdata">
												<option value="filterByPositiveTrend">positive</option>
												<option value="filterByNegativeTrend">negative</option>
												<option value="filterByNeutralTrend">neutral</option>
											</select>
										</p>
										<p> 
											<input type="checkbox" name="filterByPriceLowerBound" class = "filterdata"> minimum price
											<input type="number" name="priceLowerBound" class = "filterdata">
										</p>
										<p> 
											<input type="checkbox" name="filterByPriceUpperBound" class = "filterdata"> maximum price
											<input type="number" name="priceUpperBound" class = "filterdata">
										</p>
										<p> 
											<input type="checkbox" name="filterByVolumeLowerBound" class = "filterdata"> minimum volume
											<input type="number" name="volumeLowerBound" class = "filterdata">
										</p>
										<p> 
											<input type="checkbox" name="filterByVolumeUpperBound" class = "filterdata"> maximum volume
											<input type="number" name="volumeUpperBound" class = "filterdata">
										</p>
										<p> 
											<input type="checkbox" name="filterByItemLimitUpperBound" class = "filterdata"> maximum item limit
											<input type="number" name="itemLimitUpperBound" class = "filterdata">
										</p>
										<p> 
											<input type="checkbox" name="filterByItemLimitLowerBound" class = "filterdata"> minimum item limit
											<input type="number" name="itemLimitLowerBound" class = "filterdata">
										</p>
									</div>
								</div>
								<div id = "filterslideout" class = "d-inline-flex align-items-center">
									<div id = "slidebutton" class = "d-flex align-items-center"> 
										<div>></div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

<a class = "pl-5" href = "https://icons8.com">icons from icons8</a>

<script>
	$("#sortform").on("input", ".sortoptions input[type='range']", function(event)
	{
		$(this).siblings(".progress-bar").css("width", event.target.value + "%");
	});
</script>


<script>
	//for sortform
var sortform = $("#sortform");
var sortsubmit = $("#sortsubmit");

var options = 
{
	//bn : {selected : false, string : "<option value=\"bn\">none</option>"},
	sortByPrice : {selected : false, string : "<option value=\"sortByPrice\">by current price</option>"},
	sortByVolume : {selected : false, string : "<option value=\"sortByVolume\">by current volume</option>"}
}
var optionIndex = 1; //number of options that have been selected, also serves as unique index for naming the new option for select element
var optionString = "";
var checked = {roundedSort : false, weightedSort : false};

sortform.on("submit", function ()
{
	$("#sortform select").removeAttr('disabled');
});

$("#addoption").click(function () {
	//only add options if first select isnt selected as none and last select doesnt only have one option
	if ( ($(".sortby").first().prop("value") !== 'sortByNone') && ($(".sortby").last().children("option").length !== 1) )
	{
		$(".sortby").last().prop("disabled", true);
		options[$(".sortby").last().prop("value")].selected = true;
		optionString = "";

		for (var option in options)
		{
			if (!options[option].selected)
			{
				optionString += options[option].string;
			}
		}

		$(".sortoptions").last().after(
			"<div class = \"sortoptions\">" +
				"<h6> then by </h6>" +
				"<select class = \"sortby\"name = \"sortby[" + optionIndex + "]\">" +
					optionString +
				"</select>" +
				"<div class=\"progress position-relative " + (checked[$("input[value='weightedSort']").prop("value")] ? "" : "d-none") + "\">" +
					"<div id = \"test\" class=\"progress-bar\"role=\"progressbar\"></div>" +
					"<input name = \"weight[" + optionIndex + "]\" class = \"position-absolute weightrange\" type = \"range\"> "+
				"</div>" +	
			"</div"
			);
		optionIndex ++;
	}
});


$("input[type='radio']").click(function()
{
	if (checked[$(this).prop("value")])
	{
		$(this).prop("checked", false);
		checked[$(this).prop("value")] = false;
		if ($(this).prop("value") === "weightedSort")
		{
			$(".progress").toggleClass("d-none");
		}
	}
	else
	{
		for (sorttype in checked)
		{
			checked[sorttype] = false;
		}
		checked[$(this).prop("value")] = true;
		if ($(this).prop("value") === "weightedSort")
		{
			$(".progress").toggleClass("d-none");
		}
	}
});

sortsubmit.click(function ()
{
	sortform.append($(".filterdata").toggleClass("d-none"));
	sortform.submit();
});


</script>

<script>
	// for flipping the cards
 	 $(".flip-card").on("click", function()
 	 {
 	 	$(this).children($(".flip-card-inner")).toggleClass("flipthecard");
 	 	$(this).find($(".featureimage")).toggleClass("pointerpass");
 	 });
 	 $("#searchform").children().on("click", (event) => event.stopPropagation());
 	 $("#sortform").on("click", "*", (event) => event.stopPropagation());
 	 $("#addoption *").off("click");
 	 $("#filterform").children().on("click", (event) => event.stopPropagation());

	 $(".mainfeature").css("height", $(".featureimage").height());
</script>

<script>
	// for sliding animations

	var filteroptions = $("#filteroptions");
	var buttonstate = false;
	var buttonactive = false;
	//make a new array just to make use of the foreach function lol
	var arr = new Array();
	for (var i = 0; i < 100; i ++)
	{
		arr.push(i);
	}

	$("#slidebutton").click(function()
	{
		buttonstate = !buttonstate;
		buttonactive = true;
		arr.forEach(function(value, index)
		{
			setTimeout(function()
			{
				filteroptions.css("width", value * 4);
			}, index * 5);
		});
		arr = arr.reverse();
	});
</script>

<% include ./partials/footer.ejs %>